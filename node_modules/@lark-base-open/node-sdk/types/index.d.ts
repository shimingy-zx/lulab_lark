/**
 * MIT License
 *
 * Copyright (c) 2023 Lark Technologies Pte. Ltd.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice, shall be included in all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 */

import { AxiosRequestConfig } from 'axios';
import fs from 'fs';

interface Cache {
    set: (key: string | Symbol, value: any, expire?: number, options?: {
        namespace?: string;
    }) => Promise<boolean>;
    get: (key: string | Symbol, options?: {
        namespace?: string;
    }) => Promise<any>;
}
interface Logger {
    error: (...msg: any[]) => void | Promise<void>;
    warn: (...msg: any[]) => void | Promise<void>;
    info: (...msg: any[]) => void | Promise<void>;
    debug: (...msg: any[]) => void | Promise<void>;
    trace: (...msg: any[]) => void | Promise<void>;
}
declare enum AppType {
    SelfBuild = 0,
    ISV = 1
}
declare enum Domain {
    Feishu = 0,
    Lark = 1
}
declare enum LoggerLevel {
    fatal = 0,
    error = 1,
    warn = 2,
    info = 3,
    debug = 4,
    trace = 5
}

interface IRequestOptions$1 {
    params?: Record<string, string>;
    data?: Record<string, string>;
    headers?: Record<string, string>;
}

interface HttpInstance {
    request<T = any, R = T, D = any>(opts: HttpRequestOptions<D>): Promise<R>;
    get<T = any, R = T, D = any>(url: string, opts?: HttpRequestOptions<D>): Promise<R>;
    delete<T = any, R = T, D = any>(url: string, opts?: HttpRequestOptions<D>): Promise<R>;
    head<T = any, R = T, D = any>(url: string, opts?: HttpRequestOptions<D>): Promise<R>;
    options<T = any, R = T, D = any>(url: string, opts?: HttpRequestOptions<D>): Promise<R>;
    post<T = any, R = T, D = any>(url: string, data?: D, opts?: HttpRequestOptions<D>): Promise<R>;
    put<T = any, R = T, D = any>(url: string, data?: D, opts?: HttpRequestOptions<D>): Promise<R>;
    patch<T = any, R = T, D = any>(url: string, data?: D, opts?: HttpRequestOptions<D>): Promise<R>;
}
type ResponseType = 'arraybuffer' | 'blob' | 'document' | 'json' | 'text' | 'stream';
interface HttpRequestOptions<D> {
    url?: string;
    method?: string;
    headers?: Record<string, any>;
    params?: Record<string, any>;
    data?: D;
    responseType?: ResponseType;
}

interface IRequestOptions {
    params?: Record<string, string>;
    data?: Record<string, string>;
    headers?: Record<string, string>;
    path?: Record<string, string>;
}
interface IClientParams {
    domain?: Domain | string;
    loggerLevel?: LoggerLevel;
    logger?: Logger;
    httpInstance?: HttpInstance;
    appToken: string;
    personalBaseToken: string;
}
interface IPayload {
    params?: Record<string, any>;
    data?: Record<string, any>;
    headers?: Record<string, any>;
    path?: Record<string, any>;
}

declare abstract class Client {
    domain: any;
    logger: Logger;
    httpInstance: HttpInstance;
    abstract formatPayload(payload?: IPayload, options?: IRequestOptions$1): Promise<Required<IPayload>>;
    /**
     * 云文档-多维表格
     */
    base: {
        /**
         * 多维表格
         */
        app: {
            /**
             * {@link https://open.feishu.cn/api-explorer?project=base&resource=app&apiName=copy&version=v1 click to debug }
             *
             * {@link https://open.feishu.cn/api-explorer?from=op_doc_tab&apiName=copy&project=bitable&resource=app&version=v1 document }
             */
            copy: (payload?: {
                data?: {
                    name?: string;
                    folder_token?: string;
                    without_content?: boolean;
                    time_zone?: string;
                };
            }, options?: IRequestOptions$1) => Promise<{
                code?: number | undefined;
                msg?: string | undefined;
                data?: {
                    app?: {
                        app_token?: string | undefined;
                        name?: string | undefined;
                        revision?: number | undefined;
                        folder_token?: string | undefined;
                        url?: string | undefined;
                        default_table_id?: string | undefined;
                        time_zone?: string | undefined;
                    } | undefined;
                } | undefined;
            }>;
            /**
             * {@link https://open.feishu.cn/api-explorer?project=base&resource=app&apiName=create&version=v1 click to debug }
             *
             * {@link https://open.feishu.cn/api-explorer?from=op_doc_tab&apiName=create&project=bitable&resource=app&version=v1 document }
             */
            create: (payload?: {
                data?: {
                    name?: string;
                    folder_token?: string;
                    time_zone?: string;
                };
                params?: {
                    customized_config?: boolean;
                    source_app_token?: string;
                    copy_types?: number;
                    api_type?: string;
                };
            }, options?: IRequestOptions$1) => Promise<{
                code?: number | undefined;
                msg?: string | undefined;
                data?: {
                    app?: {
                        app_token?: string | undefined;
                        name?: string | undefined;
                        revision?: number | undefined;
                        folder_token?: string | undefined;
                        url?: string | undefined;
                        default_table_id?: string | undefined;
                        time_zone?: string | undefined;
                    } | undefined;
                } | undefined;
            }>;
            /**
             * {@link https://open.feishu.cn/api-explorer?project=base&resource=app&apiName=get&version=v1 click to debug }
             *
             * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/bitable-v1/app/get document }
             *
             * 获取多维表格元数据
             *
             * 获取指定多维表格的元数据信息，包括多维表格名称，多维表格版本号，多维表格是否开启高级权限等。
             *
             * 该接口支持调用频率上限为 20 QPS（Query Per Second，每秒请求率）
             */
            get: (payload?: {}, options?: IRequestOptions$1) => Promise<{
                code?: number | undefined;
                msg?: string | undefined;
                data?: {
                    app?: {
                        app_token?: string | undefined;
                        name?: string | undefined;
                        revision?: number | undefined;
                        is_advanced?: boolean | undefined;
                        time_zone?: string | undefined;
                    } | undefined;
                } | undefined;
            }>;
            /**
             * {@link https://open.feishu.cn/api-explorer?project=base&resource=app&apiName=update&version=v1 click to debug }
             *
             * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/bitable-v1/app/update document }
             *
             * 更新多维表格元数据
             *
             * 通过 app_token 更新多维表格元数据
             *
             * 该接口支持调用频率上限为 10 QPS
             *
             * - 飞书文档、飞书表格、知识库中的多维表格不支持开启高级权限;- 此接口非原子操作，先修改多维表格名字，后开关高级权限。可能存在部分成功的情况
             */
            update: (payload?: {
                data?: {
                    name?: string;
                    is_advanced?: boolean;
                };
            }, options?: IRequestOptions$1) => Promise<{
                code?: number | undefined;
                msg?: string | undefined;
                data?: {
                    app?: {
                        app_token?: string | undefined;
                        name?: string | undefined;
                        is_advanced?: boolean | undefined;
                        time_zone?: string | undefined;
                    } | undefined;
                } | undefined;
            }>;
        };
        /**
         * 仪表盘
         */
        appDashboard: {
            /**
             * {@link https://open.feishu.cn/api-explorer?project=base&resource=app.dashboard&apiName=copy&version=v1 click to debug }
             *
             * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/bitable-v1/app-dashboard/copy document }
             *
             * 复制仪表盘
             *
             * 该接口用于根据现有仪表盘复制出新的仪表盘
             */
            copy: (payload?: {
                data: {
                    name: string;
                };
                path: {
                    block_id: string;
                };
            }, options?: IRequestOptions$1) => Promise<{
                code?: number | undefined;
                msg?: string | undefined;
                data?: {
                    block_id?: string | undefined;
                    name?: string | undefined;
                } | undefined;
            }>;
            listWithIterator: (payload?: {
                params?: {
                    page_size?: number;
                    page_token?: string;
                };
            }, options?: IRequestOptions$1) => Promise<{
                [Symbol.asyncIterator](): AsyncGenerator<{} | null, void, unknown>;
            }>;
            /**
             * {@link https://open.feishu.cn/api-explorer?project=base&resource=app.dashboard&apiName=list&version=v1 click to debug }
             *
             * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/bitable-v1/app-dashboard/list document }
             *
             * 列出仪表盘
             *
             * 根据 app_token，获取多维表格下的所有仪表盘
             *
             * 该接口支持调用频率上限为 20 QPS
             */
            list: (payload?: {
                params?: {
                    page_size?: number;
                    page_token?: string;
                };
            }, options?: IRequestOptions$1) => Promise<{
                code?: number | undefined;
                msg?: string | undefined;
                data?: {
                    dashboards: Array<{
                        block_id: string;
                        name: string;
                    }>;
                    page_token: string;
                    has_more: boolean;
                } | undefined;
            }>;
        };
        /**
         * 自定义角色
         */
        appRole: {
            /**
             * {@link https://open.feishu.cn/api-explorer?project=base&resource=app.role&apiName=create&version=v1 click to debug }
             *
             * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/bitable-v1/app-role/create document }
             *
             * 新增自定义角色
             *
             * 新增自定义角色
             */
            create: (payload?: {
                data: {
                    role_name: string;
                    table_roles: Array<{
                        table_perm: number;
                        table_name?: string;
                        table_id?: string;
                        rec_rule?: {
                            conditions: Array<{
                                field_name: string;
                                operator?: "is" | "isNot" | "contains" | "doesNotContain" | "isEmpty" | "isNotEmpty";
                                value?: Array<string>;
                            }>;
                            conjunction?: "and" | "or";
                            other_perm?: number;
                        };
                        field_perm?: Record<string, number>;
                        allow_add_record?: boolean;
                        allow_delete_record?: boolean;
                    }>;
                    block_roles?: Array<{
                        block_id: string;
                        block_perm: number;
                    }>;
                };
            }, options?: IRequestOptions$1) => Promise<{
                code?: number | undefined;
                msg?: string | undefined;
                data?: {
                    role?: {
                        role_name: string;
                        role_id?: string | undefined;
                        table_roles: Array<{
                            table_perm: number;
                            table_name?: string;
                            table_id?: string;
                            rec_rule?: {
                                conditions: Array<{
                                    field_name: string;
                                    operator?: "is" | "isNot" | "contains" | "doesNotContain" | "isEmpty" | "isNotEmpty";
                                    value?: Array<string>;
                                    field_type?: number;
                                }>;
                                conjunction?: "and" | "or";
                                other_perm?: number;
                            };
                            field_perm?: Record<string, number>;
                            allow_add_record?: boolean;
                            allow_delete_record?: boolean;
                        }>;
                        block_roles?: {
                            block_id: string;
                            block_type?: "dashboard" | undefined;
                            block_perm: number;
                        }[] | undefined;
                    } | undefined;
                } | undefined;
            }>;
            /**
             * {@link https://open.feishu.cn/api-explorer?project=base&resource=app.role&apiName=delete&version=v1 click to debug }
             *
             * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/bitable-v1/app-role/delete document }
             *
             * 删除自定义角色
             *
             * 删除自定义角色
             */
            delete: (payload?: {
                path?: {
                    role_id?: string;
                };
            }, options?: IRequestOptions$1) => Promise<{
                code?: number | undefined;
                msg?: string | undefined;
                data?: {} | undefined;
            }>;
            listWithIterator: (payload?: {
                params?: {
                    page_size?: number;
                    page_token?: string;
                };
            }, options?: IRequestOptions$1) => Promise<{
                [Symbol.asyncIterator](): AsyncGenerator<{
                    items?: {
                        role_name: string;
                        role_id?: string | undefined;
                        table_roles: Array<{
                            table_perm: number;
                            table_name?: string;
                            table_id?: string;
                            rec_rule?: {
                                conditions: Array<{
                                    field_name: string;
                                    operator?: "is" | "isNot" | "contains" | "doesNotContain" | "isEmpty" | "isNotEmpty";
                                    value?: Array<string>;
                                    field_type?: number;
                                }>;
                                conjunction?: "and" | "or";
                                other_perm?: number;
                            };
                            field_perm?: Record<string, number>;
                            allow_add_record?: boolean;
                            allow_delete_record?: boolean;
                        }>;
                        block_roles?: {
                            block_id: string;
                            block_type?: "dashboard" | undefined;
                            block_perm: number;
                        }[] | undefined;
                    }[] | undefined;
                    total?: number | undefined;
                } | null, void, unknown>;
            }>;
            /**
             * {@link https://open.feishu.cn/api-explorer?project=base&resource=app.role&apiName=list&version=v1 click to debug }
             *
             * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/bitable-v1/app-role/list document }
             *
             * 列出自定义角色
             *
             * 列出自定义角色
             */
            list: (payload?: {
                params?: {
                    page_size?: number;
                    page_token?: string;
                };
            }, options?: IRequestOptions$1) => Promise<{
                code?: number | undefined;
                msg?: string | undefined;
                data?: {
                    items?: {
                        role_name: string;
                        role_id?: string | undefined;
                        table_roles: Array<{
                            table_perm: number;
                            table_name?: string;
                            table_id?: string;
                            rec_rule?: {
                                conditions: Array<{
                                    field_name: string;
                                    operator?: "is" | "isNot" | "contains" | "doesNotContain" | "isEmpty" | "isNotEmpty";
                                    value?: Array<string>;
                                    field_type?: number;
                                }>;
                                conjunction?: "and" | "or";
                                other_perm?: number;
                            };
                            field_perm?: Record<string, number>;
                            allow_add_record?: boolean;
                            allow_delete_record?: boolean;
                        }>;
                        block_roles?: {
                            block_id: string;
                            block_type?: "dashboard" | undefined;
                            block_perm: number;
                        }[] | undefined;
                    }[] | undefined;
                    page_token?: string | undefined;
                    has_more?: boolean | undefined;
                    total?: number | undefined;
                } | undefined;
            }>;
            /**
             * {@link https://open.feishu.cn/api-explorer?project=base&resource=app.role&apiName=update&version=v1 click to debug }
             *
             * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/bitable-v1/app-role/update document }
             *
             * 更新自定义角色
             *
             * 更新自定义角色
             *
             * 更新自定义角色是全量更新，会完全覆盖旧的自定义角色设置
             */
            update: (payload?: {
                data: {
                    role_name: string;
                    table_roles: Array<{
                        table_perm: number;
                        table_name?: string;
                        table_id?: string;
                        rec_rule?: {
                            conditions: Array<{
                                field_name: string;
                                operator?: "is" | "isNot" | "contains" | "doesNotContain" | "isEmpty" | "isNotEmpty";
                                value?: Array<string>;
                            }>;
                            conjunction?: "and" | "or";
                            other_perm?: number;
                        };
                        field_perm?: Record<string, number>;
                        allow_add_record?: boolean;
                        allow_delete_record?: boolean;
                    }>;
                    block_roles?: Array<{
                        block_id: string;
                        block_perm: number;
                    }>;
                };
                path?: {
                    role_id?: string;
                };
            }, options?: IRequestOptions$1) => Promise<{
                code?: number | undefined;
                msg?: string | undefined;
                data?: {
                    role?: {
                        role_name: string;
                        role_id?: string | undefined;
                        table_roles: Array<{
                            table_perm: number;
                            table_name?: string;
                            table_id?: string;
                            rec_rule?: {
                                conditions: Array<{
                                    field_name: string;
                                    operator?: "is" | "isNot" | "contains" | "doesNotContain" | "isEmpty" | "isNotEmpty";
                                    value?: Array<string>;
                                    field_type?: number;
                                }>;
                                conjunction?: "and" | "or";
                                other_perm?: number;
                            };
                            field_perm?: Record<string, number>;
                            allow_add_record?: boolean;
                            allow_delete_record?: boolean;
                        }>;
                        block_roles?: {
                            block_id: string;
                            block_type?: "dashboard" | undefined;
                            block_perm: number;
                        }[] | undefined;
                    } | undefined;
                } | undefined;
            }>;
        };
        /**
         * 协作者
         */
        appRoleMember: {
            /**
             * {@link https://open.feishu.cn/api-explorer?project=base&resource=app.role.member&apiName=batch_create&version=v1 click to debug }
             *
             * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/bitable-v1/app-role-member/batch_create document }
             *
             * 批量新增协作者
             *
             * 批量新增自定义角色的协作者
             */
            batchCreate: (payload?: {
                data: {
                    member_list: Array<{
                        type?: "open_id" | "union_id" | "user_id" | "chat_id" | "department_id" | "open_department_id";
                        id: string;
                    }>;
                };
                path: {
                    role_id: string;
                };
            }, options?: IRequestOptions$1) => Promise<{
                code?: number | undefined;
                msg?: string | undefined;
                data?: {} | undefined;
            }>;
            /**
             * {@link https://open.feishu.cn/api-explorer?project=base&resource=app.role.member&apiName=batch_delete&version=v1 click to debug }
             *
             * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/bitable-v1/app-role-member/batch_delete document }
             *
             * 批量删除协作者
             *
             * 批量删除自定义角色的协作者
             */
            batchDelete: (payload?: {
                data: {
                    member_list: Array<{
                        type?: "open_id" | "union_id" | "user_id" | "chat_id" | "department_id" | "open_department_id";
                        id: string;
                    }>;
                };
                path: {
                    role_id: string;
                };
            }, options?: IRequestOptions$1) => Promise<{
                code?: number | undefined;
                msg?: string | undefined;
                data?: {} | undefined;
            }>;
            /**
             * {@link https://open.feishu.cn/api-explorer?project=base&resource=app.role.member&apiName=create&version=v1 click to debug }
             *
             * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/bitable-v1/app-role-member/create document }
             *
             * 新增协作者
             *
             * 新增自定义角色的协作者
             */
            create: (payload?: {
                data: {
                    member_id: string;
                };
                params?: {
                    member_id_type?: "open_id" | "union_id" | "user_id" | "chat_id" | "department_id" | "open_department_id";
                };
                path?: {
                    role_id?: string;
                };
            }, options?: IRequestOptions$1) => Promise<{
                code?: number | undefined;
                msg?: string | undefined;
                data?: {} | undefined;
            }>;
            /**
             * {@link https://open.feishu.cn/api-explorer?project=base&resource=app.role.member&apiName=delete&version=v1 click to debug }
             *
             * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/bitable-v1/app-role-member/delete document }
             *
             * 删除协作者
             *
             * 删除自定义角色的协作者
             */
            delete: (payload?: {
                params?: {
                    member_id_type?: "open_id" | "union_id" | "user_id" | "chat_id" | "department_id" | "open_department_id";
                };
                path: {
                    role_id?: string;
                    member_id: string;
                };
            }, options?: IRequestOptions$1) => Promise<{
                code?: number | undefined;
                msg?: string | undefined;
                data?: {} | undefined;
            }>;
            listWithIterator: (payload?: {
                params?: {
                    page_size?: number;
                    page_token?: string;
                };
                path: {
                    role_id: string;
                };
            }, options?: IRequestOptions$1) => Promise<{
                [Symbol.asyncIterator](): AsyncGenerator<{
                    items?: {
                        open_id?: string | undefined;
                        union_id?: string | undefined;
                        user_id?: string | undefined;
                        chat_id?: string | undefined;
                        department_id?: string | undefined;
                        open_department_id?: string | undefined;
                        member_name?: string | undefined;
                        member_en_name?: string | undefined;
                        member_type?: "user" | "chat" | "department" | undefined;
                    }[] | undefined;
                    total?: number | undefined;
                } | null, void, unknown>;
            }>;
            /**
             * {@link https://open.feishu.cn/api-explorer?project=base&resource=app.role.member&apiName=list&version=v1 click to debug }
             *
             * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/bitable-v1/app-role-member/list document }
             *
             * 列出协作者
             *
             * 列出自定义角色的协作者
             */
            list: (payload?: {
                params?: {
                    page_size?: number;
                    page_token?: string;
                };
                path: {
                    role_id: string;
                };
            }, options?: IRequestOptions$1) => Promise<{
                code?: number | undefined;
                msg?: string | undefined;
                data?: {
                    items?: {
                        open_id?: string | undefined;
                        union_id?: string | undefined;
                        user_id?: string | undefined;
                        chat_id?: string | undefined;
                        department_id?: string | undefined;
                        open_department_id?: string | undefined;
                        member_name?: string | undefined;
                        member_en_name?: string | undefined;
                        member_type?: "user" | "chat" | "department" | undefined;
                    }[] | undefined;
                    has_more?: boolean | undefined;
                    page_token?: string | undefined;
                    total?: number | undefined;
                } | undefined;
            }>;
        };
        /**
         * 数据表
         */
        appTable: {
            /**
             * {@link https://open.feishu.cn/api-explorer?project=base&resource=app.table&apiName=batch_create&version=v1 click to debug }
             *
             * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/bitable-v1/app-table/batch_create document }
             *
             * 新增多个数据表
             *
             * 新增多个数据表
             *
             * 该接口支持调用频率上限为 10 QPS
             */
            batchCreate: (payload?: {
                data?: {
                    tables?: {
                        name?: string | undefined;
                        default_view_name?: string | undefined;
                        fields?: {
                            field_name: string;
                            type: number;
                            ui_type?: "Text" | "Barcode" | "Number" | "Progress" | "Currency" | "Rating" | "SingleSelect" | "MultiSelect" | "DateTime" | "Checkbox" | "User" | "GroupChat" | "Phone" | "Url" | "Attachment" | "SingleLink" | "Formula" | "DuplexLink" | "Location" | "CreatedTime" | "ModifiedTime" | "CreatedUser" | "ModifiedUser" | "AutoNumber" | undefined;
                            property?: {
                                options?: {
                                    name?: string | undefined;
                                    id?: string | undefined;
                                    color?: number | undefined;
                                }[] | undefined;
                                formatter?: string | undefined;
                                date_formatter?: string | undefined;
                                auto_fill?: boolean | undefined;
                                multiple?: boolean | undefined;
                                table_id?: string | undefined;
                                table_name?: string | undefined;
                                back_field_name?: string | undefined;
                                auto_serial?: {
                                    type: "custom" | "auto_increment_number";
                                    options?: {
                                        type: "system_number" | "fixed_text" | "created_time";
                                        value: string;
                                    }[] | undefined;
                                } | undefined;
                                location?: {
                                    input_type: "only_mobile" | "not_limit";
                                } | undefined;
                                formula_expression?: string | undefined;
                                allowed_edit_modes?: {
                                    manual?: boolean | undefined;
                                    scan?: boolean | undefined;
                                } | undefined;
                                min?: number | undefined;
                                max?: number | undefined;
                                range_customize?: boolean | undefined;
                                currency_code?: string | undefined;
                                rating?: {
                                    symbol?: string | undefined;
                                } | undefined;
                            } | undefined;
                            description?: {
                                disable_sync?: boolean | undefined;
                                text?: string | undefined;
                            } | undefined;
                        }[] | undefined;
                    }[] | undefined;
                } | undefined;
                params?: {
                    user_id_type?: "open_id" | "union_id" | "user_id" | undefined;
                } | undefined;
            } | undefined, options?: IRequestOptions$1) => Promise<{
                code?: number | undefined;
                msg?: string | undefined;
                data?: {
                    table_ids?: string[] | undefined;
                } | undefined;
            }>;
            /**
             * {@link https://open.feishu.cn/api-explorer?project=base&resource=app.table&apiName=batch_delete&version=v1 click to debug }
             *
             * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/bitable-v1/app-table/batch_delete document }
             *
             * 删除多个数据表
             *
             * 删除多个数据表
             *
             * 该接口支持调用频率上限为 10 QPS
             */
            batchDelete: (payload?: {
                data?: {
                    table_ids?: Array<string>;
                };
            }, options?: IRequestOptions$1) => Promise<{
                code?: number | undefined;
                msg?: string | undefined;
                data?: {} | undefined;
            }>;
            /**
             * {@link https://open.feishu.cn/api-explorer?project=base&resource=app.table&apiName=create&version=v1 click to debug }
             *
             * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/bitable-v1/app-table/create document }
             *
             * 新增数据表
             *
             * 新增一个数据表
             *
             * 该接口支持调用频率上限为 10 QPS
             */
            create: (payload?: {
                data?: {
                    table?: {
                        name?: string | undefined;
                        default_view_name?: string | undefined;
                        fields?: {
                            field_name: string;
                            type: number;
                            ui_type?: "Text" | "Barcode" | "Number" | "Progress" | "Currency" | "Rating" | "SingleSelect" | "MultiSelect" | "DateTime" | "Checkbox" | "User" | "GroupChat" | "Phone" | "Url" | "Attachment" | "SingleLink" | "Formula" | "DuplexLink" | "Location" | "CreatedTime" | "ModifiedTime" | "CreatedUser" | "ModifiedUser" | "AutoNumber" | undefined;
                            property?: {
                                options?: {
                                    name?: string | undefined;
                                    id?: string | undefined;
                                    color?: number | undefined;
                                }[] | undefined;
                                formatter?: string | undefined;
                                date_formatter?: string | undefined;
                                auto_fill?: boolean | undefined;
                                multiple?: boolean | undefined;
                                table_id?: string | undefined;
                                table_name?: string | undefined;
                                back_field_name?: string | undefined;
                                auto_serial?: {
                                    type: "custom" | "auto_increment_number";
                                    options?: {
                                        type: "system_number" | "fixed_text" | "created_time";
                                        value: string;
                                    }[] | undefined;
                                } | undefined;
                                location?: {
                                    input_type: "only_mobile" | "not_limit";
                                } | undefined;
                                formula_expression?: string | undefined;
                                allowed_edit_modes?: {
                                    manual?: boolean | undefined;
                                    scan?: boolean | undefined;
                                } | undefined;
                                min?: number | undefined;
                                max?: number | undefined;
                                range_customize?: boolean | undefined;
                                currency_code?: string | undefined;
                                rating?: {
                                    symbol?: string | undefined;
                                } | undefined;
                            } | undefined;
                            description?: {
                                disable_sync?: boolean | undefined;
                                text?: string | undefined;
                            } | undefined;
                        }[] | undefined;
                    } | undefined;
                } | undefined;
            } | undefined, options?: IRequestOptions$1) => Promise<{
                code?: number | undefined;
                msg?: string | undefined;
                data?: {
                    table_id?: string | undefined;
                    default_view_id?: string | undefined;
                    field_id_list?: string[] | undefined;
                } | undefined;
            }>;
            /**
             * {@link https://open.feishu.cn/api-explorer?project=base&resource=app.table&apiName=delete&version=v1 click to debug }
             *
             * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/bitable-v1/app-table/delete document }
             *
             * 删除数据表
             *
             * 删除一个数据表
             *
             * 该接口支持调用频率上限为 10 QPS
             */
            delete: (payload?: {
                path: {
                    table_id: string;
                };
            }, options?: IRequestOptions$1) => Promise<{
                code?: number | undefined;
                msg?: string | undefined;
                data?: {} | undefined;
            }>;
            listWithIterator: (payload?: {
                params?: {
                    page_token?: string;
                    page_size?: number;
                };
            }, options?: IRequestOptions$1) => Promise<{
                [Symbol.asyncIterator](): AsyncGenerator<{
                    total?: number | undefined;
                    items?: {
                        table_id?: string | undefined;
                        revision?: number | undefined;
                        name?: string | undefined;
                    }[] | undefined;
                } | null, void, unknown>;
            }>;
            /**
             * {@link https://open.feishu.cn/api-explorer?project=base&resource=app.table&apiName=list&version=v1 click to debug }
             *
             * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/bitable-v1/app-table/list document }
             *
             * 列出数据表
             *
             * 根据  app_token，获取多维表格下的所有数据表
             *
             * 该接口支持调用频率上限为 20 QPS
             */
            list: (payload?: {
                params?: {
                    page_token?: string;
                    page_size?: number;
                };
            }, options?: IRequestOptions$1) => Promise<{
                code?: number | undefined;
                msg?: string | undefined;
                data?: {
                    has_more?: boolean | undefined;
                    page_token?: string | undefined;
                    total?: number | undefined;
                    items?: {
                        table_id?: string | undefined;
                        revision?: number | undefined;
                        name?: string | undefined;
                    }[] | undefined;
                } | undefined;
            }>;
            /**
             * {@link https://open.feishu.cn/api-explorer?project=base&resource=app.table&apiName=patch&version=v1 click to debug }
             *
             * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/bitable-v1/app-table/patch document }
             */
            patch: (payload?: {
                data?: {
                    name?: string;
                };
                path: {
                    table_id: string;
                };
            }, options?: IRequestOptions$1) => Promise<{
                code?: number | undefined;
                msg?: string | undefined;
                data?: {
                    name?: string | undefined;
                } | undefined;
            }>;
        };
        /**
         * 字段
         */
        appTableField: {
            /**
             * {@link https://open.feishu.cn/api-explorer?project=base&resource=app.table.field&apiName=create&version=v1 click to debug }
             *
             * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/bitable-v1/app-table-field/create document }
             *
             * 新增字段
             *
             * 该接口用于在数据表中新增一个字段
             *
             * 该接口支持调用频率上限为 10 QPS
             */
            create: (payload?: {
                data: {
                    field_name: string;
                    type: number;
                    property?: {
                        options?: {
                            name?: string | undefined;
                            id?: string | undefined;
                            color?: number | undefined;
                        }[] | undefined;
                        formatter?: string | undefined;
                        date_formatter?: string | undefined;
                        auto_fill?: boolean | undefined;
                        multiple?: boolean | undefined;
                        table_id?: string | undefined;
                        table_name?: string | undefined;
                        back_field_name?: string | undefined;
                        auto_serial?: {
                            type: "custom" | "auto_increment_number";
                            options?: {
                                type: "system_number" | "fixed_text" | "created_time";
                                value: string;
                            }[] | undefined;
                        } | undefined;
                        location?: {
                            input_type: "only_mobile" | "not_limit";
                        } | undefined;
                        formula_expression?: string | undefined;
                        allowed_edit_modes?: {
                            manual?: boolean | undefined;
                            scan?: boolean | undefined;
                        } | undefined;
                        min?: number | undefined;
                        max?: number | undefined;
                        range_customize?: boolean | undefined;
                        currency_code?: string | undefined;
                        rating?: {
                            symbol?: string | undefined;
                        } | undefined;
                    } | undefined;
                    description?: {
                        disable_sync?: boolean | undefined;
                        text?: string | undefined;
                    } | undefined;
                    ui_type?: "Text" | "Barcode" | "Number" | "Progress" | "Currency" | "Rating" | "SingleSelect" | "MultiSelect" | "DateTime" | "Checkbox" | "User" | "GroupChat" | "Phone" | "Url" | "Attachment" | "SingleLink" | "Formula" | "DuplexLink" | "Location" | "CreatedTime" | "ModifiedTime" | "CreatedUser" | "ModifiedUser" | "AutoNumber" | undefined;
                };
                params?: {
                    client_token?: string | undefined;
                } | undefined;
                path: {
                    table_id: string;
                };
            } | undefined, options?: IRequestOptions$1) => Promise<{
                code?: number | undefined;
                msg?: string | undefined;
                data?: {
                    field?: {
                        field_name: string;
                        type: number;
                        property?: {
                            options?: {
                                name?: string | undefined;
                                id?: string | undefined;
                                color?: number | undefined;
                            }[] | undefined;
                            formatter?: string | undefined;
                            date_formatter?: string | undefined;
                            auto_fill?: boolean | undefined;
                            multiple?: boolean | undefined;
                            table_id?: string | undefined;
                            table_name?: string | undefined;
                            back_field_name?: string | undefined;
                            auto_serial?: {
                                type: "custom" | "auto_increment_number";
                                options?: {
                                    type: "system_number" | "fixed_text" | "created_time";
                                    value: string;
                                }[] | undefined;
                            } | undefined;
                            location?: {
                                input_type: "only_mobile" | "not_limit";
                            } | undefined;
                            formula_expression?: string | undefined;
                            allowed_edit_modes?: {
                                manual?: boolean | undefined;
                                scan?: boolean | undefined;
                            } | undefined;
                            min?: number | undefined;
                            max?: number | undefined;
                            range_customize?: boolean | undefined;
                            currency_code?: string | undefined;
                            rating?: {
                                symbol?: string | undefined;
                            } | undefined;
                        } | undefined;
                        description?: {
                            disable_sync?: boolean | undefined;
                            text?: string | undefined;
                        } | undefined;
                        is_primary?: boolean | undefined;
                        field_id?: string | undefined;
                        ui_type?: "Text" | "Barcode" | "Number" | "Progress" | "Currency" | "Rating" | "SingleSelect" | "MultiSelect" | "DateTime" | "Checkbox" | "User" | "GroupChat" | "Phone" | "Url" | "Attachment" | "SingleLink" | "Formula" | "DuplexLink" | "Location" | "CreatedTime" | "ModifiedTime" | "CreatedUser" | "ModifiedUser" | "AutoNumber" | undefined;
                        is_hidden?: boolean | undefined;
                    } | undefined;
                } | undefined;
            }>;
            /**
             * {@link https://open.feishu.cn/api-explorer?project=base&resource=app.table.field&apiName=delete&version=v1 click to debug }
             *
             * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/bitable-v1/app-table-field/delete document }
             *
             * 删除字段
             *
             * 该接口用于在数据表中删除一个字段
             *
             * 该接口支持调用频率上限为 10 QPS
             */
            delete: (payload?: {
                path: {
                    table_id: string;
                    field_id: string;
                };
            }, options?: IRequestOptions$1) => Promise<{
                code?: number | undefined;
                msg?: string | undefined;
                data?: {
                    field_id?: string | undefined;
                    deleted?: boolean | undefined;
                } | undefined;
            }>;
            listWithIterator: (payload?: {
                params?: {
                    view_id?: string;
                    text_field_as_array?: boolean;
                    page_token?: string;
                    page_size?: number;
                };
                path: {
                    table_id: string;
                };
            }, options?: IRequestOptions$1) => Promise<{
                [Symbol.asyncIterator](): AsyncGenerator<{
                    total?: number | undefined;
                    items?: {
                        field_name: string;
                        type: number;
                        property?: {
                            options?: {
                                name?: string | undefined;
                                id?: string | undefined;
                                color?: number | undefined;
                            }[] | undefined;
                            formatter?: string | undefined;
                            date_formatter?: string | undefined;
                            auto_fill?: boolean | undefined;
                            multiple?: boolean | undefined;
                            table_id?: string | undefined;
                            table_name?: string | undefined;
                            back_field_name?: string | undefined;
                            auto_serial?: {
                                type: "custom" | "auto_increment_number";
                                options?: {
                                    type: "system_number" | "fixed_text" | "created_time";
                                    value: string;
                                }[] | undefined;
                            } | undefined;
                            location?: {
                                input_type: "only_mobile" | "not_limit";
                            } | undefined;
                            formula_expression?: string | undefined;
                            allowed_edit_modes?: {
                                manual?: boolean | undefined;
                                scan?: boolean | undefined;
                            } | undefined;
                            min?: number | undefined;
                            max?: number | undefined;
                            range_customize?: boolean | undefined;
                            currency_code?: string | undefined;
                            rating?: {
                                symbol?: string | undefined;
                            } | undefined;
                        } | undefined;
                        description?: string | undefined;
                        is_primary?: boolean | undefined;
                        field_id?: string | undefined;
                        ui_type?: "Text" | "Barcode" | "Number" | "Progress" | "Currency" | "Rating" | "SingleSelect" | "MultiSelect" | "DateTime" | "Checkbox" | "User" | "GroupChat" | "Phone" | "Url" | "Attachment" | "SingleLink" | "Formula" | "DuplexLink" | "Location" | "CreatedTime" | "ModifiedTime" | "CreatedUser" | "ModifiedUser" | "AutoNumber" | undefined;
                        is_hidden?: boolean | undefined;
                    }[] | undefined;
                } | null, void, unknown>;
            }>;
            /**
             * {@link https://open.feishu.cn/api-explorer?project=base&resource=app.table.field&apiName=list&version=v1 click to debug }
             *
             * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/bitable-v1/app-table-field/list document }
             *
             * 列出字段
             *
             * 根据 app_token 和 table_id，获取数据表的所有字段
             *
             * 该接口支持调用频率上限为 20 QPS
             */
            list: (payload?: {
                params?: {
                    view_id?: string;
                    text_field_as_array?: boolean;
                    page_token?: string;
                    page_size?: number;
                };
                path: {
                    table_id: string;
                };
            }, options?: IRequestOptions$1) => Promise<{
                code?: number | undefined;
                msg?: string | undefined;
                data?: {
                    has_more?: boolean | undefined;
                    page_token?: string | undefined;
                    total?: number | undefined;
                    items?: {
                        field_name: string;
                        type: number;
                        property?: {
                            options?: {
                                name?: string | undefined;
                                id?: string | undefined;
                                color?: number | undefined;
                            }[] | undefined;
                            formatter?: string | undefined;
                            date_formatter?: string | undefined;
                            auto_fill?: boolean | undefined;
                            multiple?: boolean | undefined;
                            table_id?: string | undefined;
                            table_name?: string | undefined;
                            back_field_name?: string | undefined;
                            auto_serial?: {
                                type: "custom" | "auto_increment_number";
                                options?: {
                                    type: "system_number" | "fixed_text" | "created_time";
                                    value: string;
                                }[] | undefined;
                            } | undefined;
                            location?: {
                                input_type: "only_mobile" | "not_limit";
                            } | undefined;
                            formula_expression?: string | undefined;
                            allowed_edit_modes?: {
                                manual?: boolean | undefined;
                                scan?: boolean | undefined;
                            } | undefined;
                            min?: number | undefined;
                            max?: number | undefined;
                            range_customize?: boolean | undefined;
                            currency_code?: string | undefined;
                            rating?: {
                                symbol?: string | undefined;
                            } | undefined;
                        } | undefined;
                        description?: string | undefined;
                        is_primary?: boolean | undefined;
                        field_id?: string | undefined;
                        ui_type?: "Text" | "Barcode" | "Number" | "Progress" | "Currency" | "Rating" | "SingleSelect" | "MultiSelect" | "DateTime" | "Checkbox" | "User" | "GroupChat" | "Phone" | "Url" | "Attachment" | "SingleLink" | "Formula" | "DuplexLink" | "Location" | "CreatedTime" | "ModifiedTime" | "CreatedUser" | "ModifiedUser" | "AutoNumber" | undefined;
                        is_hidden?: boolean | undefined;
                    }[] | undefined;
                } | undefined;
            }>;
            /**
             * {@link https://open.feishu.cn/api-explorer?project=base&resource=app.table.field&apiName=update&version=v1 click to debug }
             *
             * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/bitable-v1/app-table-field/update document }
             *
             * 更新字段
             *
             * 该接口用于在数据表中更新一个字段
             *
             * 该接口支持调用频率上限为 10 QPS
             */
            update: (payload?: {
                data: {
                    field_name: string;
                    type: number;
                    property?: {
                        options?: {
                            name?: string | undefined;
                            id?: string | undefined;
                            color?: number | undefined;
                        }[] | undefined;
                        formatter?: string | undefined;
                        date_formatter?: string | undefined;
                        auto_fill?: boolean | undefined;
                        multiple?: boolean | undefined;
                        table_id?: string | undefined;
                        table_name?: string | undefined;
                        back_field_name?: string | undefined;
                        auto_serial?: {
                            type: "custom" | "auto_increment_number";
                            options?: {
                                type: "system_number" | "fixed_text" | "created_time";
                                value: string;
                            }[] | undefined;
                        } | undefined;
                        location?: {
                            input_type: "only_mobile" | "not_limit";
                        } | undefined;
                        formula_expression?: string | undefined;
                        allowed_edit_modes?: {
                            manual?: boolean | undefined;
                            scan?: boolean | undefined;
                        } | undefined;
                        min?: number | undefined;
                        max?: number | undefined;
                        range_customize?: boolean | undefined;
                        currency_code?: string | undefined;
                        rating?: {
                            symbol?: string | undefined;
                        } | undefined;
                    } | undefined;
                    description?: {
                        disable_sync?: boolean | undefined;
                        text?: string | undefined;
                    } | undefined;
                    ui_type?: "Text" | "Barcode" | "Number" | "Progress" | "Currency" | "Rating" | "SingleSelect" | "MultiSelect" | "DateTime" | "Checkbox" | "User" | "GroupChat" | "Phone" | "Url" | "Attachment" | "SingleLink" | "Formula" | "DuplexLink" | "Location" | "CreatedTime" | "ModifiedTime" | "CreatedUser" | "ModifiedUser" | "AutoNumber" | undefined;
                };
                path: {
                    table_id: string;
                    field_id: string;
                };
            } | undefined, options?: IRequestOptions$1) => Promise<{
                code?: number | undefined;
                msg?: string | undefined;
                data?: {
                    field?: {
                        field_name: string;
                        type: number;
                        property?: {
                            options?: {
                                name?: string | undefined;
                                id?: string | undefined;
                                color?: number | undefined;
                            }[] | undefined;
                            formatter?: string | undefined;
                            date_formatter?: string | undefined;
                            auto_fill?: boolean | undefined;
                            multiple?: boolean | undefined;
                            table_id?: string | undefined;
                            table_name?: string | undefined;
                            back_field_name?: string | undefined;
                            auto_serial?: {
                                type: "custom" | "auto_increment_number";
                                options?: {
                                    type: "system_number" | "fixed_text" | "created_time";
                                    value: string;
                                }[] | undefined;
                            } | undefined;
                            location?: {
                                input_type: "only_mobile" | "not_limit";
                            } | undefined;
                            formula_expression?: string | undefined;
                            allowed_edit_modes?: {
                                manual?: boolean | undefined;
                                scan?: boolean | undefined;
                            } | undefined;
                            min?: number | undefined;
                            max?: number | undefined;
                            range_customize?: boolean | undefined;
                            currency_code?: string | undefined;
                            rating?: {
                                symbol?: string | undefined;
                            } | undefined;
                        } | undefined;
                        description?: {
                            disable_sync?: boolean | undefined;
                            text?: string | undefined;
                        } | undefined;
                        is_primary?: boolean | undefined;
                        field_id?: string | undefined;
                        ui_type?: "Text" | "Barcode" | "Number" | "Progress" | "Currency" | "Rating" | "SingleSelect" | "MultiSelect" | "DateTime" | "Checkbox" | "User" | "GroupChat" | "Phone" | "Url" | "Attachment" | "SingleLink" | "Formula" | "DuplexLink" | "Location" | "CreatedTime" | "ModifiedTime" | "CreatedUser" | "ModifiedUser" | "AutoNumber" | undefined;
                        is_hidden?: boolean | undefined;
                    } | undefined;
                } | undefined;
            }>;
        };
        /**
         * 表单
         */
        appTableFormField: {
            listWithIterator: (payload?: {
                params?: {
                    page_size?: number;
                    page_token?: string;
                };
                path: {
                    table_id: string;
                    form_id: string;
                };
            }, options?: IRequestOptions$1) => Promise<{
                [Symbol.asyncIterator](): AsyncGenerator<{} | null, void, unknown>;
            }>;
            /**
             * {@link https://open.feishu.cn/api-explorer?project=base&resource=app.table.form.field&apiName=list&version=v1 click to debug }
             *
             * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/bitable-v1/app-table-form-field/list document }
             *
             * 列出表单问题
             *
             * 列出表单的所有问题项
             *
             * 该接口支持调用频率上限为 20 QPS
             */
            list: (payload?: {
                params?: {
                    page_size?: number;
                    page_token?: string;
                };
                path: {
                    table_id: string;
                    form_id: string;
                };
            }, options?: IRequestOptions$1) => Promise<{
                code?: number | undefined;
                msg?: string | undefined;
                data?: {
                    items: Array<{
                        field_id?: string;
                        title?: string;
                        description?: string;
                        required?: boolean;
                        visible?: boolean;
                    }>;
                    page_token: string;
                    has_more: boolean;
                    total: number;
                } | undefined;
            }>;
            /**
             * {@link https://open.feishu.cn/api-explorer?project=base&resource=app.table.form.field&apiName=patch&version=v1 click to debug }
             *
             * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/bitable-v1/app-table-form-field/patch document }
             *
             * 更新表单问题
             *
             * 该接口用于更新表单中的问题项
             *
             * 该接口支持调用频率上限为 10 QPS
             */
            patch: (payload?: {
                data?: {
                    pre_field_id?: string;
                    title?: string;
                    description?: string;
                    required?: boolean;
                    visible?: boolean;
                };
                path: {
                    table_id: string;
                    form_id: string;
                    field_id: string;
                };
            }, options?: IRequestOptions$1) => Promise<{
                code?: number | undefined;
                msg?: string | undefined;
                data?: {
                    field?: {
                        pre_field_id?: string | undefined;
                        title?: string | undefined;
                        description?: string | undefined;
                        required?: boolean | undefined;
                        visible?: boolean | undefined;
                    } | undefined;
                } | undefined;
            }>;
        };
        /**
         * 表单
         */
        appTableForm: {
            /**
             * {@link https://open.feishu.cn/api-explorer?project=base&resource=app.table.form&apiName=get&version=v1 click to debug }
             *
             * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/bitable-v1/app-table-form/get document }
             *
             * 获取表单元数据
             *
             * 获取表单的所有元数据项
             *
             * 该接口支持调用频率上限为 20 QPS
             */
            get: (payload?: {
                path: {
                    table_id: string;
                    form_id: string;
                };
            }, options?: IRequestOptions$1) => Promise<{
                code?: number | undefined;
                msg?: string | undefined;
                data?: {
                    form: {
                        name?: string;
                        description?: string;
                        shared?: boolean;
                        shared_url?: string;
                        shared_limit?: "off" | "tenant_editable" | "anyone_editable";
                        submit_limit_once?: boolean;
                    };
                } | undefined;
            }>;
            /**
             * {@link https://open.feishu.cn/api-explorer?project=base&resource=app.table.form&apiName=patch&version=v1 click to debug }
             *
             * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/bitable-v1/app-table-form/patch document }
             *
             * 更新表单元数据
             *
             * 该接口用于更新表单中的元数据项
             *
             * 该接口支持调用频率上限为 10 QPS
             */
            patch: (payload?: {
                data?: {
                    name?: string;
                    description?: string;
                    shared?: boolean;
                    shared_limit?: "off" | "tenant_editable" | "anyone_editable";
                    submit_limit_once?: boolean;
                };
                path: {
                    table_id: string;
                    form_id: string;
                };
            }, options?: IRequestOptions$1) => Promise<{
                code?: number | undefined;
                msg?: string | undefined;
                data?: {
                    form: {
                        name?: string;
                        description?: string;
                        shared?: boolean;
                        shared_url?: string;
                        shared_limit?: "off" | "tenant_editable" | "anyone_editable";
                        submit_limit_once?: boolean;
                    };
                } | undefined;
            }>;
        };
        /**
         * 记录
         */
        appTableRecord: {
            /**
             * {@link https://open.feishu.cn/api-explorer?project=base&resource=app.table.record&apiName=batch_create&version=v1 click to debug }
             *
             * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/bitable-v1/app-table-record/batch_create document }
             *
             * 新增多条记录
             *
             * 该接口用于在数据表中新增多条记录，单次调用最多新增 500 条记录。
             *
             * 该接口支持调用频率上限为 10 QPS（Query Per Second，每秒请求率）
             */
            batchCreate: (payload?: {
                data: {
                    records: Array<{
                        fields: Record<string, string | number | number | number | boolean | {
                            text?: string;
                            link?: string;
                        } | {
                            location?: string;
                            pname?: string;
                            cityname?: string;
                            adname?: string;
                            address?: string;
                            name?: string;
                            full_address?: string;
                        } | Array<{
                            id?: string;
                            name?: string;
                            avatar_url?: string;
                        }> | Array<string> | Array<{
                            id?: string;
                            name?: string;
                            en_name?: string;
                            email?: string;
                            avatar_url?: string;
                        }> | Array<{
                            file_token?: string;
                            name?: string;
                            type?: string;
                            size?: number;
                            url?: string;
                            tmp_url?: string;
                        }>>;
                        created_by?: {
                            id?: string;
                            name?: string;
                            en_name?: string;
                            email?: string;
                            avatar_url?: string;
                        };
                        created_time?: number;
                        last_modified_by?: {
                            id?: string;
                            name?: string;
                            en_name?: string;
                            email?: string;
                            avatar_url?: string;
                        };
                        last_modified_time?: number;
                    }>;
                };
                params?: {
                    user_id_type?: "user_id" | "union_id" | "open_id";
                    client_token?: string;
                };
                path: {
                    table_id: string;
                };
            }, options?: IRequestOptions$1) => Promise<{
                code?: number | undefined;
                msg?: string | undefined;
                data?: {
                    records?: {
                        fields: Record<string, string | number | number | number | boolean | {
                            text?: string;
                            link?: string;
                        } | {
                            location?: string;
                            pname?: string;
                            cityname?: string;
                            adname?: string;
                            address?: string;
                            name?: string;
                            full_address?: string;
                        } | Array<{
                            id?: string;
                            name?: string;
                            avatar_url?: string;
                        }> | Array<string> | Array<{
                            id?: string;
                            name?: string;
                            en_name?: string;
                            email?: string;
                            avatar_url?: string;
                        }> | Array<{
                            file_token?: string;
                            name?: string;
                            type?: string;
                            size?: number;
                            url?: string;
                            tmp_url?: string;
                        }>>;
                        record_id?: string | undefined;
                        created_by?: {
                            id?: string | undefined;
                            name?: string | undefined;
                            en_name?: string | undefined;
                            email?: string | undefined;
                            avatar_url?: string | undefined;
                        } | undefined;
                        created_time?: number | undefined;
                        last_modified_by?: {
                            id?: string | undefined;
                            name?: string | undefined;
                            en_name?: string | undefined;
                            email?: string | undefined;
                            avatar_url?: string | undefined;
                        } | undefined;
                        last_modified_time?: number | undefined;
                    }[] | undefined;
                } | undefined;
            }>;
            /**
             * {@link https://open.feishu.cn/api-explorer?project=base&resource=app.table.record&apiName=batch_delete&version=v1 click to debug }
             *
             * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/bitable-v1/app-table-record/batch_delete document }
             *
             * 删除多条记录
             *
             * 该接口用于删除数据表中现有的多条记录，单次调用中最多删除 500 条记录。
             *
             * 该接口支持调用频率上限为 10 QPS
             */
            batchDelete: (payload?: {
                data: {
                    records: Array<string>;
                };
                path: {
                    table_id: string;
                };
            }, options?: IRequestOptions$1) => Promise<{
                code?: number | undefined;
                msg?: string | undefined;
                data?: {
                    records?: {
                        deleted?: boolean | undefined;
                        record_id?: string | undefined;
                    }[] | undefined;
                } | undefined;
            }>;
            /**
             * {@link https://open.feishu.cn/api-explorer?project=base&resource=app.table.record&apiName=batch_update&version=v1 click to debug }
             *
             * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/bitable-v1/app-table-record/batch_update document }
             *
             * 更新多条记录
             *
             * 该接口用于更新数据表中的多条记录，单次调用最多更新 500 条记录。
             *
             * 该接口支持调用频率上限为 10 QPS
             */
            batchUpdate: (payload?: {
                data: {
                    records: Array<{
                        fields: Record<string, string | number | number | number | boolean | {
                            text?: string;
                            link?: string;
                        } | {
                            location?: string;
                            pname?: string;
                            cityname?: string;
                            adname?: string;
                            address?: string;
                            name?: string;
                            full_address?: string;
                        } | Array<{
                            id?: string;
                            name?: string;
                            avatar_url?: string;
                        }> | Array<string> | Array<{
                            id?: string;
                            name?: string;
                            en_name?: string;
                            email?: string;
                            avatar_url?: string;
                        }> | Array<{
                            file_token?: string;
                            name?: string;
                            type?: string;
                            size?: number;
                            url?: string;
                            tmp_url?: string;
                        }>>;
                        record_id?: string;
                        created_by?: {
                            id?: string;
                            name?: string;
                            en_name?: string;
                            email?: string;
                            avatar_url?: string;
                        };
                        created_time?: number;
                        last_modified_by?: {
                            id?: string;
                            name?: string;
                            en_name?: string;
                            email?: string;
                            avatar_url?: string;
                        };
                        last_modified_time?: number;
                    }>;
                };
                params?: {
                    user_id_type?: "user_id" | "union_id" | "open_id";
                };
                path: {
                    table_id: string;
                };
            }, options?: IRequestOptions$1) => Promise<{
                code?: number | undefined;
                msg?: string | undefined;
                data?: {
                    records?: {
                        fields: Record<string, string | number | number | number | boolean | {
                            text?: string;
                            link?: string;
                        } | {
                            location?: string;
                            pname?: string;
                            cityname?: string;
                            adname?: string;
                            address?: string;
                            name?: string;
                            full_address?: string;
                        } | Array<{
                            id?: string;
                            name?: string;
                            avatar_url?: string;
                        }> | Array<string> | Array<{
                            id?: string;
                            name?: string;
                            en_name?: string;
                            email?: string;
                            avatar_url?: string;
                        }> | Array<{
                            file_token?: string;
                            name?: string;
                            type?: string;
                            size?: number;
                            url?: string;
                            tmp_url?: string;
                        }>>;
                        record_id?: string | undefined;
                        created_by?: {
                            id?: string | undefined;
                            name?: string | undefined;
                            en_name?: string | undefined;
                            email?: string | undefined;
                            avatar_url?: string | undefined;
                        } | undefined;
                        created_time?: number | undefined;
                        last_modified_by?: {
                            id?: string | undefined;
                            name?: string | undefined;
                            en_name?: string | undefined;
                            email?: string | undefined;
                            avatar_url?: string | undefined;
                        } | undefined;
                        last_modified_time?: number | undefined;
                    }[] | undefined;
                } | undefined;
            }>;
            /**
             * {@link https://open.feishu.cn/api-explorer?project=base&resource=app.table.record&apiName=create&version=v1 click to debug }
             *
             * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/bitable-v1/app-table-record/create document }
             *
             * 新增记录
             *
             * 该接口用于在数据表中新增一条记录
             *
             * 该接口支持调用频率上限为 10 QPS（Query Per Second，每秒请求率）
             */
            create: (payload?: {
                data: {
                    fields: Record<string, string | number | number | number | boolean | {
                        text?: string;
                        link?: string;
                    } | {
                        location?: string;
                        pname?: string;
                        cityname?: string;
                        adname?: string;
                        address?: string;
                        name?: string;
                        full_address?: string;
                    } | Array<{
                        id?: string;
                        name?: string;
                        avatar_url?: string;
                    }> | Array<string> | Array<{
                        id?: string;
                        name?: string;
                        en_name?: string;
                        email?: string;
                    }> | Array<{
                        file_token?: string;
                        name?: string;
                        type?: string;
                        size?: number;
                        url?: string;
                        tmp_url?: string;
                    }>>;
                };
                params?: {
                    user_id_type?: "user_id" | "union_id" | "open_id";
                    client_token?: string;
                };
                path: {
                    table_id: string;
                };
            }, options?: IRequestOptions$1) => Promise<{
                code?: number | undefined;
                msg?: string | undefined;
                data?: {
                    record?: {
                        fields: Record<string, string | number | number | number | boolean | {
                            text?: string;
                            link?: string;
                        } | {
                            location?: string;
                            pname?: string;
                            cityname?: string;
                            adname?: string;
                            address?: string;
                            name?: string;
                            full_address?: string;
                        } | Array<{
                            id?: string;
                            name?: string;
                            avatar_url?: string;
                        }> | Array<string> | Array<{
                            id?: string;
                            name?: string;
                            en_name?: string;
                            email?: string;
                            avatar_url?: string;
                        }> | Array<{
                            file_token?: string;
                            name?: string;
                            type?: string;
                            size?: number;
                            url?: string;
                            tmp_url?: string;
                        }>>;
                        record_id?: string | undefined;
                        created_by?: {
                            id?: string | undefined;
                            name?: string | undefined;
                            en_name?: string | undefined;
                            email?: string | undefined;
                            avatar_url?: string | undefined;
                        } | undefined;
                        created_time?: number | undefined;
                        last_modified_by?: {
                            id?: string | undefined;
                            name?: string | undefined;
                            en_name?: string | undefined;
                            email?: string | undefined;
                            avatar_url?: string | undefined;
                        } | undefined;
                        last_modified_time?: number | undefined;
                    } | undefined;
                } | undefined;
            }>;
            /**
             * {@link https://open.feishu.cn/api-explorer?project=base&resource=app.table.record&apiName=delete&version=v1 click to debug }
             *
             * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/bitable-v1/app-table-record/delete document }
             *
             * 删除记录
             *
             * 该接口用于删除数据表中的一条记录
             *
             * 该接口支持调用频率上限为 10 QPS
             */
            delete: (payload?: {
                path: {
                    table_id: string;
                    record_id: string;
                };
            }, options?: IRequestOptions$1) => Promise<{
                code?: number | undefined;
                msg?: string | undefined;
                data?: {
                    deleted?: boolean | undefined;
                    record_id?: string | undefined;
                } | undefined;
            }>;
            /**
             * {@link https://open.feishu.cn/api-explorer?project=base&resource=app.table.record&apiName=get&version=v1 click to debug }
             *
             * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/bitable-v1/app-table-record/get document }
             *
             * 检索记录
             *
             * 该接口用于根据 record_id 的值检索现有记录
             *
             * 该接口支持调用频率上限为 20 QPS
             */
            get: (payload?: {
                params?: {
                    text_field_as_array?: boolean;
                    user_id_type?: "user_id" | "union_id" | "open_id";
                    display_formula_ref?: boolean;
                    with_shared_url?: boolean;
                    automatic_fields?: boolean;
                };
                path: {
                    table_id: string;
                    record_id: string;
                };
            }, options?: IRequestOptions$1) => Promise<{
                code?: number | undefined;
                msg?: string | undefined;
                data?: {
                    record?: {
                        fields: Record<string, string | number | number | number | boolean | {
                            text?: string;
                            link?: string;
                        } | {
                            location?: string;
                            pname?: string;
                            cityname?: string;
                            adname?: string;
                            address?: string;
                            name?: string;
                            full_address?: string;
                        } | Array<{
                            id?: string;
                            name?: string;
                            avatar_url?: string;
                        }> | Array<string> | Array<{
                            id?: string;
                            name?: string;
                            en_name?: string;
                            email?: string;
                            avatar_url?: string;
                        }> | Array<{
                            file_token?: string;
                            name?: string;
                            type?: string;
                            size?: number;
                            url?: string;
                            tmp_url?: string;
                        }>>;
                        record_id?: string | undefined;
                        created_by?: {
                            id?: string | undefined;
                            name?: string | undefined;
                            en_name?: string | undefined;
                            email?: string | undefined;
                            avatar_url?: string | undefined;
                        } | undefined;
                        created_time?: number | undefined;
                        last_modified_by?: {
                            id?: string | undefined;
                            name?: string | undefined;
                            en_name?: string | undefined;
                            email?: string | undefined;
                            avatar_url?: string | undefined;
                        } | undefined;
                        last_modified_time?: number | undefined;
                    } | undefined;
                } | undefined;
            }>;
            listWithIterator: (payload?: {
                params?: {
                    view_id?: string;
                    filter?: string;
                    sort?: string;
                    field_names?: string;
                    text_field_as_array?: boolean;
                    user_id_type?: "user_id" | "union_id" | "open_id";
                    display_formula_ref?: boolean;
                    automatic_fields?: boolean;
                    page_token?: string;
                    page_size?: number;
                };
                path: {
                    table_id: string;
                };
            }, options?: IRequestOptions$1) => Promise<{
                [Symbol.asyncIterator](): AsyncGenerator<{
                    total?: number | undefined;
                    items?: {
                        fields: Record<string, string | number | number | number | boolean | {
                            text?: string;
                            link?: string;
                        } | {
                            location?: string;
                            pname?: string;
                            cityname?: string;
                            adname?: string;
                            address?: string;
                            name?: string;
                            full_address?: string;
                        } | Array<{
                            id?: string;
                            name?: string;
                            avatar_url?: string;
                        }> | Array<string> | Array<{
                            id?: string;
                            name?: string;
                            en_name?: string;
                            email?: string;
                            avatar_url?: string;
                        }> | Array<{
                            file_token?: string;
                            name?: string;
                            type?: string;
                            size?: number;
                            url?: string;
                            tmp_url?: string;
                        }>>;
                        record_id?: string | undefined;
                        created_by?: {
                            id?: string | undefined;
                            name?: string | undefined;
                            en_name?: string | undefined;
                            email?: string | undefined;
                            avatar_url?: string | undefined;
                        } | undefined;
                        created_time?: number | undefined;
                        last_modified_by?: {
                            id?: string | undefined;
                            name?: string | undefined;
                            en_name?: string | undefined;
                            email?: string | undefined;
                            avatar_url?: string | undefined;
                        } | undefined;
                        last_modified_time?: number | undefined;
                    }[] | undefined;
                } | null, void, unknown>;
            }>;
            /**
             * {@link https://open.feishu.cn/api-explorer?project=base&resource=app.table.record&apiName=list&version=v1 click to debug }
             *
             * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/bitable-v1/app-table-record/list document }
             *
             * 列出记录
             *
             * 该接口用于列出数据表中的现有记录，单次最多列出 500 行记录，支持分页获取。
             *
             * 该接口支持调用频率上限为 10 QPS（Query Per Second，每秒请求率），1000 QPM（Query Per Minute，每分钟请求率）
             */
            list: (payload?: {
                params?: {
                    view_id?: string;
                    filter?: string;
                    sort?: string;
                    field_names?: string;
                    text_field_as_array?: boolean;
                    user_id_type?: "user_id" | "union_id" | "open_id";
                    display_formula_ref?: boolean;
                    automatic_fields?: boolean;
                    page_token?: string;
                    page_size?: number;
                };
                path: {
                    table_id: string;
                };
            }, options?: IRequestOptions$1) => Promise<{
                code?: number | undefined;
                msg?: string | undefined;
                data?: {
                    has_more?: boolean | undefined;
                    page_token?: string | undefined;
                    total?: number | undefined;
                    items?: {
                        fields: Record<string, string | number | number | number | boolean | {
                            text?: string;
                            link?: string;
                        } | {
                            location?: string;
                            pname?: string;
                            cityname?: string;
                            adname?: string;
                            address?: string;
                            name?: string;
                            full_address?: string;
                        } | Array<{
                            id?: string;
                            name?: string;
                            avatar_url?: string;
                        }> | Array<string> | Array<{
                            id?: string;
                            name?: string;
                            en_name?: string;
                            email?: string;
                            avatar_url?: string;
                        }> | Array<{
                            file_token?: string;
                            name?: string;
                            type?: string;
                            size?: number;
                            url?: string;
                            tmp_url?: string;
                        }>>;
                        record_id?: string | undefined;
                        created_by?: {
                            id?: string | undefined;
                            name?: string | undefined;
                            en_name?: string | undefined;
                            email?: string | undefined;
                            avatar_url?: string | undefined;
                        } | undefined;
                        created_time?: number | undefined;
                        last_modified_by?: {
                            id?: string | undefined;
                            name?: string | undefined;
                            en_name?: string | undefined;
                            email?: string | undefined;
                            avatar_url?: string | undefined;
                        } | undefined;
                        last_modified_time?: number | undefined;
                    }[] | undefined;
                } | undefined;
            }>;
            /**
             * {@link https://open.feishu.cn/api-explorer?project=base&resource=app.table.record&apiName=update&version=v1 click to debug }
             *
             * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/bitable-v1/app-table-record/update document }
             *
             * 更新记录
             *
             * 该接口用于更新数据表中的一条记录
             *
             * 该接口支持调用频率上限为 10 QPS（Query Per Second，每秒请求率）
             */
            update: (payload?: {
                data: {
                    fields: Record<string, string | number | number | number | boolean | {
                        text?: string;
                        link?: string;
                    } | {
                        location?: string;
                        pname?: string;
                        cityname?: string;
                        adname?: string;
                        address?: string;
                        name?: string;
                        full_address?: string;
                    } | Array<{
                        id?: string;
                        name?: string;
                        avatar_url?: string;
                    }> | Array<string> | Array<{
                        id?: string;
                        name?: string;
                        en_name?: string;
                        email?: string;
                    }> | Array<{
                        file_token?: string;
                        name?: string;
                        type?: string;
                        size?: number;
                        url?: string;
                        tmp_url?: string;
                    }>>;
                };
                params?: {
                    user_id_type?: "user_id" | "union_id" | "open_id";
                };
                path: {
                    table_id: string;
                    record_id: string;
                };
            }, options?: IRequestOptions$1) => Promise<{
                code?: number | undefined;
                msg?: string | undefined;
                data?: {
                    record?: {
                        fields: Record<string, string | number | number | number | boolean | {
                            text?: string;
                            link?: string;
                        } | {
                            location?: string;
                            pname?: string;
                            cityname?: string;
                            adname?: string;
                            address?: string;
                            name?: string;
                            full_address?: string;
                        } | Array<{
                            id?: string;
                            name?: string;
                            avatar_url?: string;
                        }> | Array<string> | Array<{
                            id?: string;
                            name?: string;
                            en_name?: string;
                            email?: string;
                            avatar_url?: string;
                        }> | Array<{
                            file_token?: string;
                            name?: string;
                            type?: string;
                            size?: number;
                            url?: string;
                            tmp_url?: string;
                        }>>;
                        record_id?: string | undefined;
                        created_by?: {
                            id?: string | undefined;
                            name?: string | undefined;
                            en_name?: string | undefined;
                            email?: string | undefined;
                            avatar_url?: string | undefined;
                        } | undefined;
                        created_time?: number | undefined;
                        last_modified_by?: {
                            id?: string | undefined;
                            name?: string | undefined;
                            en_name?: string | undefined;
                            email?: string | undefined;
                            avatar_url?: string | undefined;
                        } | undefined;
                        last_modified_time?: number | undefined;
                    } | undefined;
                } | undefined;
            }>;
        };
        /**
         * 视图
         */
        appTableView: {
            /**
             * {@link https://open.feishu.cn/api-explorer?project=base&resource=app.table.view&apiName=create&version=v1 click to debug }
             *
             * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/bitable-v1/app-table-view/create document }
             *
             * 新增视图
             *
             * 在数据表中新增一个视图
             *
             * 该接口支持调用频率上限为 10 QPS
             */
            create: (payload?: {
                data: {
                    view_name: string;
                    view_type?: "grid" | "kanban" | "gallery" | "gantt" | "form";
                };
                path?: {
                    table_id?: string;
                };
            }, options?: IRequestOptions$1) => Promise<{
                code?: number | undefined;
                msg?: string | undefined;
                data?: {
                    view?: {
                        view_id?: string | undefined;
                        view_name?: string | undefined;
                        view_type?: string | undefined;
                        property?: {
                            filter_info?: {
                                conjunction: "and" | "or";
                                conditions: Array<{
                                    field_id: string;
                                    operator: "is" | "isNot" | "contains" | "doesNotContain" | "isEmpty" | "isNotEmpty" | "isGreater" | "isGreaterEqual" | "isLess" | "isLessEqual";
                                    value?: string;
                                    condition_id?: string;
                                    field_type?: string;
                                }>;
                                condition_omitted?: boolean | undefined;
                            } | undefined;
                            hidden_fields?: string[] | undefined;
                            hierarchy_config?: {
                                field_id?: string | undefined;
                            } | undefined;
                        } | undefined;
                        view_public_level?: "Public" | "Locked" | "Private" | undefined;
                        view_private_owner_id?: string | undefined;
                    } | undefined;
                } | undefined;
            }>;
            /**
             * {@link https://open.feishu.cn/api-explorer?project=base&resource=app.table.view&apiName=delete&version=v1 click to debug }
             *
             * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/bitable-v1/app-table-view/delete document }
             *
             * 删除视图
             *
             * 删除数据表中的视图
             *
             * 该接口支持调用频率上限为 10 QPS
             */
            delete: (payload?: {
                path?: {
                    table_id?: string;
                    view_id?: string;
                };
            }, options?: IRequestOptions$1) => Promise<{
                code?: number | undefined;
                msg?: string | undefined;
                data?: {} | undefined;
            }>;
            /**
             * {@link https://open.feishu.cn/api-explorer?project=base&resource=app.table.view&apiName=get&version=v1 click to debug }
             *
             * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/bitable-v1/app-table-view/get document }
             *
             * 检索视图
             *
             * 该接口根据 view_id 检索现有视图
             */
            get: (payload?: {
                path?: {
                    table_id?: string;
                    view_id?: string;
                };
            }, options?: IRequestOptions$1) => Promise<{
                code?: number | undefined;
                msg?: string | undefined;
                data?: {
                    view?: {
                        view_id?: string | undefined;
                        view_name?: string | undefined;
                        view_type?: string | undefined;
                        property?: {
                            filter_info?: {
                                conjunction: "and" | "or";
                                conditions: Array<{
                                    field_id: string;
                                    operator: "is" | "isNot" | "contains" | "doesNotContain" | "isEmpty" | "isNotEmpty" | "isGreater" | "isGreaterEqual" | "isLess" | "isLessEqual";
                                    value?: string;
                                    condition_id?: string;
                                    field_type?: string;
                                }>;
                                condition_omitted?: boolean | undefined;
                            } | undefined;
                            hidden_fields?: string[] | undefined;
                            hierarchy_config?: {
                                field_id?: string | undefined;
                            } | undefined;
                        } | undefined;
                        view_public_level?: "Public" | "Locked" | "Private" | undefined;
                        view_private_owner_id?: string | undefined;
                    } | undefined;
                } | undefined;
            }>;
            listWithIterator: (payload?: {
                params?: {
                    page_size?: number;
                    page_token?: string;
                    user_id_type?: "user_id" | "union_id" | "open_id";
                };
                path?: {
                    table_id?: string;
                };
            }, options?: IRequestOptions$1) => Promise<{
                [Symbol.asyncIterator](): AsyncGenerator<{
                    items?: {
                        view_id?: string | undefined;
                        view_name?: string | undefined;
                        view_type?: string | undefined;
                        property?: {
                            filter_info?: {
                                conjunction: "and" | "or";
                                conditions: Array<{
                                    field_id: string;
                                    operator: "is" | "isNot" | "contains" | "doesNotContain" | "isEmpty" | "isNotEmpty" | "isGreater" | "isGreaterEqual" | "isLess" | "isLessEqual";
                                    value?: string;
                                    condition_id?: string;
                                    field_type?: string;
                                }>;
                                condition_omitted?: boolean | undefined;
                            } | undefined;
                            hidden_fields?: string[] | undefined;
                            hierarchy_config?: {
                                field_id?: string | undefined;
                            } | undefined;
                        } | undefined;
                        view_public_level?: "Public" | "Locked" | "Private" | undefined;
                        view_private_owner_id?: string | undefined;
                    }[] | undefined;
                    total?: number | undefined;
                } | null, void, unknown>;
            }>;
            /**
             * {@link https://open.feishu.cn/api-explorer?project=base&resource=app.table.view&apiName=list&version=v1 click to debug }
             *
             * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/bitable-v1/app-table-view/list document }
             *
             * 列出视图
             *
             * 根据 app_token 和 table_id，获取数据表的所有视图
             *
             * 该接口支持调用频率上限为 20 QPS
             */
            list: (payload?: {
                params?: {
                    page_size?: number;
                    page_token?: string;
                    user_id_type?: "user_id" | "union_id" | "open_id";
                };
                path?: {
                    table_id?: string;
                };
            }, options?: IRequestOptions$1) => Promise<{
                code?: number | undefined;
                msg?: string | undefined;
                data?: {
                    items?: {
                        view_id?: string | undefined;
                        view_name?: string | undefined;
                        view_type?: string | undefined;
                        property?: {
                            filter_info?: {
                                conjunction: "and" | "or";
                                conditions: Array<{
                                    field_id: string;
                                    operator: "is" | "isNot" | "contains" | "doesNotContain" | "isEmpty" | "isNotEmpty" | "isGreater" | "isGreaterEqual" | "isLess" | "isLessEqual";
                                    value?: string;
                                    condition_id?: string;
                                    field_type?: string;
                                }>;
                                condition_omitted?: boolean | undefined;
                            } | undefined;
                            hidden_fields?: string[] | undefined;
                            hierarchy_config?: {
                                field_id?: string | undefined;
                            } | undefined;
                        } | undefined;
                        view_public_level?: "Public" | "Locked" | "Private" | undefined;
                        view_private_owner_id?: string | undefined;
                    }[] | undefined;
                    page_token?: string | undefined;
                    has_more?: boolean | undefined;
                    total?: number | undefined;
                } | undefined;
            }>;
            /**
             * {@link https://open.feishu.cn/api-explorer?project=base&resource=app.table.view&apiName=patch&version=v1 click to debug }
             *
             * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/bitable-v1/app-table-view/patch document }
             *
             * 更新视图
             *
             * 该接口用于增量修改视图信息
             */
            patch: (payload?: {
                data?: {
                    view_name?: string;
                    property?: {
                        filter_info?: {
                            conjunction: "and" | "or";
                            conditions: Array<{
                                field_id: string;
                                operator: "is" | "isNot" | "contains" | "doesNotContain" | "isEmpty" | "isNotEmpty" | "isGreater" | "isGreaterEqual" | "isLess" | "isLessEqual";
                                value?: string;
                            }>;
                        };
                        hidden_fields?: Array<string>;
                        hierarchy_config?: {
                            field_id?: string;
                        };
                    };
                };
                path?: {
                    table_id?: string;
                    view_id?: string;
                };
            }, options?: IRequestOptions$1) => Promise<{
                code?: number | undefined;
                msg?: string | undefined;
                data?: {
                    view?: {
                        view_id?: string | undefined;
                        view_name?: string | undefined;
                        view_type?: string | undefined;
                        property?: {
                            filter_info?: {
                                conjunction: "and" | "or";
                                conditions: Array<{
                                    field_id: string;
                                    operator: "is" | "isNot" | "contains" | "doesNotContain" | "isEmpty" | "isNotEmpty" | "isGreater" | "isGreaterEqual" | "isLess" | "isLessEqual";
                                    value?: string;
                                    condition_id?: string;
                                    field_type?: string;
                                }>;
                                condition_omitted?: boolean | undefined;
                            } | undefined;
                            hidden_fields?: string[] | undefined;
                            hierarchy_config?: {
                                field_id?: string | undefined;
                            } | undefined;
                        } | undefined;
                        view_public_level?: "Public" | "Locked" | "Private" | undefined;
                        view_private_owner_id?: string | undefined;
                    } | undefined;
                } | undefined;
            }>;
        };
    };
    /**
     * 云文档-文件管理
     */
    drive: {
        /**
         * 素材
         */
        media: {
            /**
             * {@link https://open.feishu.cn/api-explorer?project=drive&resource=media&apiName=download&version=v1 click to debug }
             *
             * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/drive-v1/media/download document }
             *
             * 下载素材
             *
             * 使用该接口可以下载素材。素材表示在各种创作容器里的文件，如Doc文档内的图片，文件均属于素材。支持range下载。
             *
             * 该接口不支持太高的并发，且调用频率上限为5QPS
             */
            download: (payload?: {
                params?: {
                    extra?: string;
                };
                path: {
                    file_token: string;
                };
            }, options?: IRequestOptions$1) => Promise<{
                writeFile: (filePath: string) => Promise<unknown>;
            }>;
            /**
             * {@link https://open.feishu.cn/api-explorer?project=drive&resource=media&apiName=upload_all&version=v1 click to debug }
             *
             * {@link https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/drive-v1/media/upload_all document }
             *
             * 上传素材
             *
             * 将文件、图片、视频等素材文件上传到指定云文档中。素材文件在云空间中不会显示，只会显示在对应云文档中。
             *
             * 该接口支持调用频率上限为5QPS
             *
             * 请不要使用这个接口上传大于20MB的文件，如果有这个需求可以尝试使用[分片上传接口](https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/drive-v1/media/multipart-upload-media/introduction)。
             */
            uploadAll: (payload?: {
                data: {
                    file_name: string;
                    parent_type: "doc_image" | "docx_image" | "sheet_image" | "doc_file" | "docx_file" | "sheet_file" | "vc_virtual_background" | "bitable_image" | "bitable_file" | "moments" | "ccm_import_open";
                    parent_node: string;
                    size: number;
                    checksum?: string;
                    extra?: string;
                    file: Buffer | fs.ReadStream;
                };
            }, options?: IRequestOptions$1) => Promise<{
                file_token?: string | undefined;
            } | null>;
        };
    };
}

declare class BaseClient extends Client {
    logger: Logger;
    domain: string;
    httpInstance: HttpInstance;
    appToken: string;
    personalBaseToken: string;
    constructor(params: IClientParams);
    formatPayload(payload?: IPayload, options?: IRequestOptions): Promise<Required<IPayload>>;
    request<T = any>(payload: AxiosRequestConfig, options?: IRequestOptions): Promise<T>;
}

export { AppType, BaseClient, Cache, Domain, Logger, LoggerLevel };
